{"ast":null,"code":"class Api {\n  constructor({\n    baseUrl,\n    headers\n  }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  getInitialCards() {\n    return fetch(this._baseUrl + '/cards', {\n      headers: this._headers\n    }).then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText));\n  }\n\n  getUserInfo() {\n    return fetch(this._baseUrl + '/users/me', {\n      headers: this._headers\n    }).then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText));\n  }\n\n  getAppInfo() {\n    return Promise.all([this.getUserInfo(), this.getInitialCards()]);\n  }\n\n  addCard({\n    name,\n    link\n  }) {\n    return fetch(this._baseUrl + '/cards', {\n      headers: this._headers,\n      method: \"POST\",\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText));\n  }\n\n  removeCard(cardId) {\n    return fetch(this._baseUrl + '/cards/' + cardId, {\n      headers: this._headers,\n      method: \"DELETE\"\n    }).then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText));\n  }\n\n  addLike(cardId) {\n    return fetch(this._baseUrl + '/cards/likes/' + cardId, {\n      headers: this._headers,\n      method: \"PUT\"\n    }).then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText));\n  }\n\n  removeLike(cardId) {\n    return fetch(this._baseUrl + '/cards/likes/' + cardId, {\n      headers: this._headers,\n      method: \"DELETE\"\n    }).then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText));\n  }\n\n  setUserInfo({\n    name,\n    job\n  }) {\n    return fetch(this._baseUrl + '/users/me', {\n      headers: this._headers,\n      method: \"PATCH\",\n      body: JSON.stringify({\n        name,\n        about: job\n      })\n    }).then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText));\n  }\n\n  setUserAvatar({\n    avatar\n  }) {\n    return fetch(this._baseUrl + '/users/me/avatar', {\n      headers: this._headers,\n      method: \"PATCH\",\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText));\n  }\n\n}\n\nexport default new Api({\n  baseUrl: \"https://around.nomoreparties.co/v1/group-5\",\n  headers: {\n    authorization: \"0b0810cc-19b7-4496-ab2f-26f1fe242520\\n\",\n    \"Content-Type\": \"application/json\"\n  }\n});","map":{"version":3,"sources":["/Users/yolqin/Desktop/Practicum/around-react/src/utils/api.js"],"names":["Api","constructor","baseUrl","headers","_baseUrl","_headers","getInitialCards","fetch","then","res","ok","json","Promise","reject","statusText","getUserInfo","getAppInfo","all","addCard","name","link","method","body","JSON","stringify","removeCard","cardId","addLike","removeLike","setUserInfo","job","about","setUserAvatar","avatar","authorization"],"mappings":"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","sourcesContent":["class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  getInitialCards() {\n    return fetch(this._baseUrl + '/cards', {\n      headers: this._headers\n    })\n      .then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText))\n  }\n\n  getUserInfo() {\n    return fetch(this._baseUrl + '/users/me', {\n      headers: this._headers\n    })\n      .then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText))\n  }\n\n  getAppInfo() {\n    return Promise.all([this.getUserInfo(), this.getInitialCards()])\n  }\n\n  addCard({ name, link }) {\n    return fetch(this._baseUrl + '/cards', {\n      headers: this._headers,\n      method: \"POST\",\n      body: JSON.stringify({\n        name,\n        link\n      })\n    })\n      .then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText))\n  }\n\n  removeCard(cardId) {\n    return fetch(this._baseUrl + '/cards/' + cardId, {\n      headers: this._headers,\n      method: \"DELETE\"\n    })\n      .then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText))\n  }\n\n  addLike(cardId) {\n    return fetch(this._baseUrl + '/cards/likes/' + cardId, {\n      headers: this._headers,\n      method: \"PUT\"\n    })\n      .then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText))\n  }\n\n  removeLike(cardId) {\n    return fetch(this._baseUrl + '/cards/likes/' + cardId, {\n      headers: this._headers,\n      method: \"DELETE\"\n    })\n      .then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText))\n  }\n\n  setUserInfo({ name, job }) {\n    return fetch(this._baseUrl + '/users/me', {\n      headers: this._headers,\n      method: \"PATCH\",\n      body: JSON.stringify({\n        name,\n        about: job\n      })\n    })\n      .then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText))\n  }\n\n  setUserAvatar({avatar}) {\n    return fetch(this._baseUrl + '/users/me/avatar', {\n      headers: this._headers,\n      method: \"PATCH\",\n      body: JSON.stringify({\n        avatar\n      })\n    })\n      .then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText))\n  }\n}\n\nexport default new Api({\n  baseUrl: \"https://around.nomoreparties.co/v1/group-5\",\n  headers: {\n    authorization: \"0b0810cc-19b7-4496-ab2f-26f1fe242520\\n\",\n    \"Content-Type\": \"application/json\"\n  }\n});"]},"metadata":{},"sourceType":"module"}