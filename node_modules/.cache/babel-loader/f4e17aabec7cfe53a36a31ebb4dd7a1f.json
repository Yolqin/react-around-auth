{"ast":null,"code":"class Api {\n  constructor({\n    baseUrl,\n    headers\n  }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  getInitialCards() {\n    return fetch(this._baseUrl + '/cards', {\n      headers: this._headers\n    }).then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText));\n  }\n\n  getUserInfo() {\n    return fetch(this._baseUrl + '/users/me', {\n      headers: this._headers\n    }).then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText));\n  }\n\n  getAppInfo() {\n    return Promise.all([this.getUserInfo(), this.getInitialCards()]);\n  }\n\n  addCard({\n    name,\n    link\n  }) {\n    return fetch(this._baseUrl + '/cards', {\n      headers: this._headers,\n      method: \"POST\",\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText));\n  }\n\n  removeCard(cardId) {\n    return fetch(this._baseUrl + '/cards/' + cardId, {\n      headers: this._headers,\n      method: \"DELETE\"\n    }).then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText));\n  }\n\n  addLike(cardId) {\n    return fetch(this._baseUrl + '/cards/likes/' + cardId, {\n      headers: this._headers,\n      method: \"PUT\"\n    }).then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText));\n  }\n\n  removeLike(cardId) {\n    return fetch(this._baseUrl + '/cards/likes/' + cardId, {\n      headers: this._headers,\n      method: \"DELETE\"\n    }).then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText));\n  }\n\n  setUserInfo({\n    name,\n    job\n  }) {\n    return fetch(this._baseUrl + '/users/me', {\n      headers: this._headers,\n      method: \"PATCH\",\n      body: JSON.stringify(data)\n    }).then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText));\n  }\n\n  setUserAvatar({\n    avatar\n  }) {\n    return fetch(this._baseUrl + '/users/me/avatar', {\n      headers: this._headers,\n      method: \"PATCH\",\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText));\n  }\n\n}\n\nexport default new Api({\n  baseUrl: \"https://around.nomoreparties.co/v1/group-5\",\n  headers: {\n    authorization: \"0b0810cc-19b7-4496-ab2f-26f1fe242520\",\n    \"Content-Type\": \"application/json\"\n  }\n});","map":{"version":3,"sources":["/Users/yolqin/Desktop/Practicum/around-react/src/utils/api.js"],"names":["Api","constructor","baseUrl","headers","_baseUrl","_headers","getInitialCards","fetch","then","res","ok","json","Promise","reject","statusText","getUserInfo","getAppInfo","all","addCard","name","link","method","body","JSON","stringify","removeCard","cardId","addLike","removeLike","setUserInfo","job","data","setUserAvatar","avatar","authorization"],"mappings":"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","sourcesContent":["class Api {\n    constructor({baseUrl, headers}) {\n        this._baseUrl = baseUrl;\n        this._headers = headers;\n    }\n\n    getInitialCards() {\n        return fetch(this._baseUrl + '/cards', {\n            headers: this._headers\n        })\n            .then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText))\n    }\n\n    getUserInfo() {\n        return fetch(this._baseUrl + '/users/me', {\n            headers: this._headers\n        })\n            .then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText))\n    }\n\n    getAppInfo() {\n        return Promise.all([this.getUserInfo(), this.getInitialCards()])\n    }\n\n    addCard({name, link}) {\n        return fetch(this._baseUrl + '/cards', {\n            headers: this._headers,\n            method: \"POST\",\n            body: JSON.stringify({\n                name,\n                link\n            })\n        })\n            .then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText))\n    }\n\n    removeCard(cardId) {\n        return fetch(this._baseUrl + '/cards/' + cardId, {\n            headers: this._headers,\n            method: \"DELETE\"\n        })\n            .then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText))\n    }\n\n    addLike(cardId) {\n        return fetch(this._baseUrl + '/cards/likes/' + cardId, {\n            headers: this._headers,\n            method: \"PUT\"\n        })\n            .then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText))\n    }\n\n    removeLike(cardId) {\n        return fetch(this._baseUrl + '/cards/likes/' + cardId, {\n            headers: this._headers,\n            method: \"DELETE\"\n        })\n            .then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText))\n    }\n\n    setUserInfo({name, job}) {\n        return fetch(this._baseUrl + '/users/me', {\n            headers: this._headers,\n            method: \"PATCH\",\n            body: JSON.stringify(data)\n        })\n            .then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText))\n    }\n\n\n    setUserAvatar({avatar})\n        {\n            return fetch(this._baseUrl + '/users/me/avatar', {\n                headers: this._headers,\n                method: \"PATCH\",\n                body: JSON.stringify({\n                    avatar\n                })\n            })\n                .then(res => res.ok ? res.json() : Promise.reject('Error!' + res.statusText))\n        }\n    }\n\n    export\n    default\n    new\n\n    Api({\n            baseUrl: \"https://around.nomoreparties.co/v1/group-5\",\n            headers: {\n                authorization: \"0b0810cc-19b7-4496-ab2f-26f1fe242520\",\n                \"Content-Type\": \"application/json\"\n            }\n        });"]},"metadata":{},"sourceType":"module"}